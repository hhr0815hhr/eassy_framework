// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_10.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Player_Info struct {
	Uid       int64  `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	AccountId int64  `protobuf:"varint,2,opt,name=accountId" json:"accountId,omitempty"`
	Nick      string `protobuf:"bytes,3,opt,name=nick" json:"nick,omitempty"`
	Level     int32  `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	Coin      int64  `protobuf:"varint,5,opt,name=coin" json:"coin,omitempty"`
	Diamond   int64  `protobuf:"varint,6,opt,name=diamond" json:"diamond,omitempty"`
	HeadImg   string `protobuf:"bytes,7,opt,name=headImg" json:"headImg,omitempty"`
}

func (m *Player_Info) Reset()                    { *m = Player_Info{} }
func (m *Player_Info) String() string            { return proto.CompactTextString(m) }
func (*Player_Info) ProtoMessage()               {}
func (*Player_Info) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Player_Info) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *Player_Info) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Player_Info) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *Player_Info) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Player_Info) GetCoin() int64 {
	if m != nil {
		return m.Coin
	}
	return 0
}

func (m *Player_Info) GetDiamond() int64 {
	if m != nil {
		return m.Diamond
	}
	return 0
}

func (m *Player_Info) GetHeadImg() string {
	if m != nil {
		return m.HeadImg
	}
	return ""
}

type C2S_Login_10001 struct {
	Token     string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	AccountId int64  `protobuf:"varint,2,opt,name=accountId" json:"accountId,omitempty"`
}

func (m *C2S_Login_10001) Reset()                    { *m = C2S_Login_10001{} }
func (m *C2S_Login_10001) String() string            { return proto.CompactTextString(m) }
func (*C2S_Login_10001) ProtoMessage()               {}
func (*C2S_Login_10001) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *C2S_Login_10001) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *C2S_Login_10001) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

type S2C_Login_10001 struct {
	Code int32        `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Info *Player_Info `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
}

func (m *S2C_Login_10001) Reset()                    { *m = S2C_Login_10001{} }
func (m *S2C_Login_10001) String() string            { return proto.CompactTextString(m) }
func (*S2C_Login_10001) ProtoMessage()               {}
func (*S2C_Login_10001) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *S2C_Login_10001) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *S2C_Login_10001) GetInfo() *Player_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

type C2S_SetNick_10002 struct {
	Uid    int64  `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	ImgUrl string `protobuf:"bytes,2,opt,name=imgUrl" json:"imgUrl,omitempty"`
}

func (m *C2S_SetNick_10002) Reset()                    { *m = C2S_SetNick_10002{} }
func (m *C2S_SetNick_10002) String() string            { return proto.CompactTextString(m) }
func (*C2S_SetNick_10002) ProtoMessage()               {}
func (*C2S_SetNick_10002) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *C2S_SetNick_10002) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *C2S_SetNick_10002) GetImgUrl() string {
	if m != nil {
		return m.ImgUrl
	}
	return ""
}

type S2C_SetNick_10002 struct {
	Ok int32 `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *S2C_SetNick_10002) Reset()                    { *m = S2C_SetNick_10002{} }
func (m *S2C_SetNick_10002) String() string            { return proto.CompactTextString(m) }
func (*S2C_SetNick_10002) ProtoMessage()               {}
func (*S2C_SetNick_10002) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *S2C_SetNick_10002) GetOk() int32 {
	if m != nil {
		return m.Ok
	}
	return 0
}

func init() {
	proto.RegisterType((*Player_Info)(nil), "protos.Player_Info")
	proto.RegisterType((*C2S_Login_10001)(nil), "protos.C2S_Login_10001")
	proto.RegisterType((*S2C_Login_10001)(nil), "protos.S2C_Login_10001")
	proto.RegisterType((*C2S_SetNick_10002)(nil), "protos.C2S_SetNick_10002")
	proto.RegisterType((*S2C_SetNick_10002)(nil), "protos.S2C_SetNick_10002")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserService service

type UserServiceClient interface {
	Login(ctx context.Context, in *C2S_Login_10001, opts ...grpc.CallOption) (*S2C_Login_10001, error)
	SetNick(ctx context.Context, in *C2S_SetNick_10002, opts ...grpc.CallOption) (*S2C_SetNick_10002, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) Login(ctx context.Context, in *C2S_Login_10001, opts ...grpc.CallOption) (*S2C_Login_10001, error) {
	out := new(S2C_Login_10001)
	err := grpc.Invoke(ctx, "/protos.UserService/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SetNick(ctx context.Context, in *C2S_SetNick_10002, opts ...grpc.CallOption) (*S2C_SetNick_10002, error) {
	out := new(S2C_SetNick_10002)
	err := grpc.Invoke(ctx, "/protos.UserService/SetNick", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceServer interface {
	Login(context.Context, *C2S_Login_10001) (*S2C_Login_10001, error)
	SetNick(context.Context, *C2S_SetNick_10002) (*S2C_SetNick_10002, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(C2S_Login_10001)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.UserService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Login(ctx, req.(*C2S_Login_10001))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_SetNick_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(C2S_SetNick_10002)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SetNick(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.UserService/SetNick",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SetNick(ctx, req.(*C2S_SetNick_10002))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _UserService_Login_Handler,
		},
		{
			MethodName: "SetNick",
			Handler:    _UserService_SetNick_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_10.proto",
}

func init() { proto.RegisterFile("user_10.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x86, 0x29, 0x50, 0x48, 0x87, 0x28, 0xb2, 0x1a, 0x5d, 0x88, 0x07, 0xb2, 0x1e, 0xe4, 0x44,
	0x4a, 0x3d, 0x1a, 0x0f, 0x86, 0x78, 0x20, 0x31, 0xc4, 0x6c, 0xc3, 0xb9, 0xa9, 0xed, 0x82, 0x9b,
	0x96, 0x5d, 0xd3, 0x16, 0x12, 0x1f, 0xc2, 0x67, 0xf1, 0x15, 0xcd, 0x4e, 0x41, 0x29, 0x31, 0x9e,
	0x3a, 0xff, 0xcc, 0xce, 0xbf, 0x5f, 0xff, 0x2c, 0x9c, 0x6c, 0x72, 0x91, 0x05, 0x13, 0x77, 0xfc,
	0x9e, 0xe9, 0x42, 0x93, 0x16, 0x7e, 0x72, 0xf6, 0x65, 0x41, 0xe7, 0x25, 0x0d, 0x3f, 0x44, 0x16,
	0xcc, 0xd4, 0x52, 0x93, 0x33, 0x68, 0x6c, 0x64, 0x4c, 0xad, 0xa1, 0x35, 0x6a, 0x70, 0x53, 0x92,
	0x6b, 0x70, 0xc2, 0x28, 0xd2, 0x1b, 0x55, 0xcc, 0x62, 0x5a, 0xc7, 0xfe, 0x6f, 0x83, 0x10, 0x68,
	0x2a, 0x19, 0x25, 0xb4, 0x31, 0xb4, 0x46, 0x0e, 0xc7, 0x9a, 0x5c, 0x80, 0x9d, 0x8a, 0xad, 0x48,
	0x69, 0x73, 0x68, 0x8d, 0x6c, 0x5e, 0x0a, 0x73, 0x32, 0xd2, 0x52, 0x51, 0x1b, 0x2d, 0xb0, 0x26,
	0x14, 0xda, 0xb1, 0x0c, 0xd7, 0x5a, 0xc5, 0xb4, 0x85, 0xed, 0xbd, 0x34, 0x93, 0x37, 0x11, 0xc6,
	0xb3, 0xf5, 0x8a, 0xb6, 0xd1, 0x7a, 0x2f, 0xd9, 0x13, 0x74, 0xa7, 0x9e, 0x1f, 0x3c, 0xeb, 0x95,
	0x54, 0xc1, 0xc4, 0x75, 0xdd, 0x89, 0xb9, 0xb0, 0xd0, 0x89, 0x50, 0x88, 0xed, 0xf0, 0x52, 0xfc,
	0x0f, 0xce, 0xe6, 0xd0, 0xf5, 0xbd, 0x69, 0xc5, 0x06, 0x09, 0x63, 0x81, 0x2e, 0x36, 0xc7, 0x9a,
	0xdc, 0x42, 0x53, 0xaa, 0xa5, 0xc6, 0xfd, 0x8e, 0x77, 0x5e, 0xa6, 0x97, 0x8f, 0x0f, 0x22, 0xe3,
	0x78, 0x80, 0x3d, 0x40, 0xcf, 0x60, 0xf9, 0xa2, 0x98, 0xcb, 0x28, 0x41, 0x47, 0xef, 0x8f, 0x34,
	0x2f, 0xa1, 0x25, 0xd7, 0xab, 0x45, 0x96, 0xa2, 0xa3, 0xc3, 0x77, 0x8a, 0xdd, 0x40, 0xcf, 0xe0,
	0x54, 0xd7, 0x4f, 0xa1, 0xae, 0x93, 0x1d, 0x4e, 0x5d, 0x27, 0xde, 0xa7, 0x05, 0x9d, 0x45, 0x2e,
	0x32, 0x5f, 0x64, 0x5b, 0x19, 0x09, 0x72, 0x0f, 0x36, 0xf2, 0x93, 0xab, 0x3d, 0xd7, 0x51, 0x32,
	0x83, 0x9f, 0xc1, 0xd1, 0xbf, 0xb2, 0x1a, 0x79, 0x84, 0xf6, 0xee, 0x36, 0xd2, 0x3f, 0x5c, 0xaf,
	0x20, 0x0c, 0xfa, 0x87, 0x06, 0x95, 0x11, 0xab, 0xbd, 0x96, 0x8f, 0xe8, 0xee, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0x55, 0xfe, 0x97, 0x11, 0x5c, 0x02, 0x00, 0x00,
}
