// Code generated by protoc-gen-go. DO NOT EDIT.
// source: login_10.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	login_10.proto

It has these top-level messages:
	Player_Info
	C2S_Login_10001
	S2C_Login_10001
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Player_Info struct {
	Uid  int32  `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Nick string `protobuf:"bytes,2,opt,name=nick" json:"nick,omitempty"`
}

func (m *Player_Info) Reset()                    { *m = Player_Info{} }
func (m *Player_Info) String() string            { return proto.CompactTextString(m) }
func (*Player_Info) ProtoMessage()               {}
func (*Player_Info) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Player_Info) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *Player_Info) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

type C2S_Login_10001 struct {
	Token     string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	AccountId int32  `protobuf:"varint,2,opt,name=accountId" json:"accountId,omitempty"`
}

func (m *C2S_Login_10001) Reset()                    { *m = C2S_Login_10001{} }
func (m *C2S_Login_10001) String() string            { return proto.CompactTextString(m) }
func (*C2S_Login_10001) ProtoMessage()               {}
func (*C2S_Login_10001) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *C2S_Login_10001) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *C2S_Login_10001) GetAccountId() int32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

type S2C_Login_10001 struct {
	Code int32        `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Info *Player_Info `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
}

func (m *S2C_Login_10001) Reset()                    { *m = S2C_Login_10001{} }
func (m *S2C_Login_10001) String() string            { return proto.CompactTextString(m) }
func (*S2C_Login_10001) ProtoMessage()               {}
func (*S2C_Login_10001) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *S2C_Login_10001) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *S2C_Login_10001) GetInfo() *Player_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Player_Info)(nil), "protos.Player_Info")
	proto.RegisterType((*C2S_Login_10001)(nil), "protos.C2S_Login_10001")
	proto.RegisterType((*S2C_Login_10001)(nil), "protos.S2C_Login_10001")
}

func init() { proto.RegisterFile("login_10.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 187 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0xc9, 0x4f, 0xcf,
	0xcc, 0x8b, 0x37, 0x34, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a,
	0xc6, 0x5c, 0xdc, 0x01, 0x39, 0x89, 0x95, 0xa9, 0x45, 0xf1, 0x9e, 0x79, 0x69, 0xf9, 0x42, 0x02,
	0x5c, 0xcc, 0xa5, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x20, 0xa6, 0x90, 0x10,
	0x17, 0x4b, 0x5e, 0x66, 0x72, 0xb6, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0xad, 0xe4,
	0xca, 0xc5, 0xef, 0x6c, 0x14, 0x1c, 0xef, 0x03, 0x35, 0xd2, 0xc0, 0xc0, 0x50, 0x48, 0x84, 0x8b,
	0xb5, 0x24, 0x3f, 0x3b, 0x35, 0x0f, 0xac, 0x95, 0x33, 0x08, 0xc2, 0x11, 0x92, 0xe1, 0xe2, 0x4c,
	0x4c, 0x4e, 0xce, 0x2f, 0xcd, 0x2b, 0xf1, 0x4c, 0x01, 0x9b, 0xc0, 0x1a, 0x84, 0x10, 0x50, 0xf2,
	0xe3, 0xe2, 0x0f, 0x36, 0x72, 0x46, 0x31, 0x46, 0x88, 0x8b, 0x25, 0x39, 0x3f, 0x25, 0x15, 0xea,
	0x00, 0x30, 0x5b, 0x48, 0x9d, 0x8b, 0x25, 0x33, 0x2f, 0x2d, 0x1f, 0xac, 0x9f, 0xdb, 0x48, 0x18,
	0xe2, 0x81, 0x62, 0x3d, 0x24, 0x67, 0x07, 0x81, 0x15, 0x24, 0x41, 0xfc, 0x64, 0x0c, 0x08, 0x00,
	0x00, 0xff, 0xff, 0xa1, 0x9d, 0xe1, 0xbf, 0xec, 0x00, 0x00, 0x00,
}
